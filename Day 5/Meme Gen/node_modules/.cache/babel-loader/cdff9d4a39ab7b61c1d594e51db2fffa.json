{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\indranil.champati\\\\Documents\\\\my-app\\\\src\\\\Form.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\"; //import memeData from \"./memesData\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Form() {\n  _s();\n\n  const [allMemeData, setMemeAllImages] = React.useState({});\n  const [imgState, setImageState] = React.useState(false);\n  /*   const [url, setImage] = React.useState(\"\");\r\n   */\n\n  const [meme, setMeme] = React.useState({\n    topText: \"\",\n    bottomText: \"\",\n    randomImage: \"\"\n  });\n  React.useEffect(() => {\n    async function getMemesApi() {\n      const response = await fetch(\"https://api.imgflip.com/get_memes\");\n      const data = await response.json();\n      setMemeAllImages(data);\n    }\n\n    getMemesApi();\n  }, []);\n\n  function imghandle(event) {\n    let url = \"\";\n\n    if (event.target.files.length !== 0) {\n      url = URL.createObjectURL(event.target.files[0]);\n    } // url = URL.createObjectURL(event.target.files[0]);\n\n\n    if (url !== \"\") {\n      setImageState(true);\n      setMeme({ ...meme,\n        randomImage: url\n      });\n    }\n  }\n\n  function handleClick() {\n    const memesArray = allMemeData.data.memes;\n    const randomIndex = Math.floor(Math.random() * memesArray.length);\n    const imgUrl = memesArray[randomIndex].url;\n    setImageState(true);\n    setMeme({ ...meme,\n      randomImage: imgUrl\n    });\n  }\n\n  function handleChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setMeme({ ...meme,\n      [name]: value\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-class\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-text\",\n            onChange: handleChange,\n            name: \"topText\",\n            value: meme.topText,\n            placeholder: \"Enter top text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            className: \"input-text\",\n            onChange: handleChange,\n            name: \"bottomText\",\n            value: meme.bottomText,\n            placeholder: \"Enter bottom text\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: handleClick,\n          children: \"Get a new random meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"upload-meme\",\n          children: \"Upload your own meme\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          name: \"uploadedImage\",\n          className: \"file\",\n          onChange: imghandle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"meme\",\n      style: {\n        display: imgState ? \"block\" : \"none\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: meme.randomImage,\n        className: \"meme--img\",\n        alt: \"meme\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text top\",\n        children: meme.topText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"meme--text bottom\",\n        children: meme.bottomText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n}\n/*\r\n    if (url !== \"\") {\r\n      setMeme({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: url\r\n      });\r\n      return;\r\n    }\r\n   */\n\n_s(Form, \"mOmTDjSRP8/QGI2QrT4wFw13joo=\");\n\n_c = Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","Form","allMemeData","setMemeAllImages","useState","imgState","setImageState","meme","setMeme","topText","bottomText","randomImage","useEffect","getMemesApi","response","fetch","data","json","imghandle","event","url","target","files","length","URL","createObjectURL","handleClick","memesArray","memes","randomIndex","Math","floor","random","imgUrl","handleChange","name","value","display"],"sources":["C:/Users/indranil.champati/Documents/my-app/src/Form.js"],"sourcesContent":["import React from \"react\";\r\n//import memeData from \"./memesData\";\r\n\r\nexport default function Form() {\r\n    const [allMemeData, setMemeAllImages] = React.useState({});\r\n    const [imgState, setImageState] = React.useState(false);\r\n  /*   const [url, setImage] = React.useState(\"\");\r\n   */ const [meme, setMeme] = React.useState({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: \"\"\r\n    });\r\n\r\n    React.useEffect(() => {\r\n        async function getMemesApi() {\r\n            const response = await fetch(\"https://api.imgflip.com/get_memes\");\r\n            const data = await response.json();\r\n            setMemeAllImages(data);\r\n        }\r\n        getMemesApi();\r\n    }, []);\r\n\r\n    function imghandle(event) {\r\n        let url = \"\";\r\n        if (event.target.files.length !== 0) {\r\n            url = URL.createObjectURL(event.target.files[0]);\r\n        }\r\n        // url = URL.createObjectURL(event.target.files[0]);\r\n\r\n        if (url !== \"\") {\r\n            setImageState(true);\r\n            setMeme({\r\n                ...meme,\r\n                randomImage: url\r\n            });\r\n        }\r\n    }\r\n    function handleClick() {\r\n        const memesArray = allMemeData.data.memes;\r\n        const randomIndex = Math.floor(Math.random() * memesArray.length);\r\n        const imgUrl = memesArray[randomIndex].url;\r\n        setImageState(true);\r\n        setMeme({\r\n            ...meme,\r\n            randomImage: imgUrl\r\n        });\r\n    }\r\n\r\n    function handleChange(event) {\r\n        const { name, value } = event.target;\r\n        setMeme({\r\n            ...meme,\r\n            [name]: value\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"form-class\">\r\n                <div className=\"form\">\r\n                    <div className=\"input-container\">\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input-text\"\r\n                            onChange={handleChange}\r\n                            name=\"topText\"\r\n                            value={meme.topText}\r\n                            placeholder=\"Enter top text\"\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            className=\"input-text\"\r\n                            onChange={handleChange}\r\n                            name=\"bottomText\"\r\n                            value={meme.bottomText}\r\n                            placeholder=\"Enter bottom text\"\r\n                        />\r\n                    </div>\r\n                    <button className=\"btn\" onClick={handleClick}>\r\n                        Get a new random meme\r\n                    </button>\r\n                    <p className=\"upload-meme\">Upload your own meme</p>\r\n                    <input\r\n                        type=\"file\"\r\n                        name=\"uploadedImage\"\r\n                        className=\"file\"\r\n                        onChange={imghandle}\r\n                    />\r\n                </div>\r\n            </div>\r\n            <div className=\"meme\" style={{ display: imgState ? \"block\" : \"none\" }}>\r\n                <img src={meme.randomImage} className=\"meme--img\" alt=\"meme\" />\r\n                <h2 className=\"meme--text top\">{meme.topText}</h2>\r\n                <h2 className=\"meme--text bottom\">{meme.bottomText}</h2>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n/*\r\n    if (url !== \"\") {\r\n      setMeme({\r\n        topText: \"\",\r\n        bottomText: \"\",\r\n        randomImage: url\r\n      });\r\n      return;\r\n    }\r\n   */\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}